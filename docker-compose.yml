services:
  # Redis para Rate Limiting
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço de Autenticação - Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123
      - KC_DB=dev-file
    ports:
      - "8080:8080"
    command: start-dev
    volumes:
      - keycloak-data:/opt/keycloak/data

  # Serviço de Autenticação customizado
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./auth-service:/app
    ports:
      - "8002:8002"
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=vehicle-sales
      - KEYCLOAK_CLIENT_ID=vehicle-sales-app
      - KEYCLOAK_CLIENT_SECRET=T14LidpfzazUfpvn6GsrlDyGooT8p0s6
      - MONGODB_URL=mongodb://auth-mongodb:27017
      - MONGODB_DB_NAME=auth_db
      - MONGODB_COLLECTION=users
      - REDIS_URL=redis://redis:6379
    depends_on:
      - keycloak
      - auth-mongodb
      - redis

  # MongoDB para o serviço de autenticação
  auth-mongodb:
    image: mongo:latest
    ports:
      - "27021:27017"
    volumes:
      - auth-mongodb-data:/data/db

  # Serviço Core (Veículos)
  core-service:
    build:
      context: ./core-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./core-service:/app
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://core-mongodb:27017
      - MONGODB_DB_NAME=core_db
      - MONGODB_COLLECTION=vehicles
      - AUTH_SERVICE_URL=http://auth-service:8002
      - REDIS_URL=redis://redis:6379
    depends_on:
      - core-mongodb
      - auth-service
      - redis

  # MongoDB para o core service
  core-mongodb:
    image: mongo:latest
    ports:
      - "27019:27017"
    volumes:
      - core-mongodb-data:/data/db

  # Serviço de Vendas
  sales-service:
    build:
      context: ./sales-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./sales-service:/app
    ports:
      - "8001:8001"
    environment:
      - MONGODB_URL=mongodb://sales-mongodb:27017
      - MONGODB_DB_NAME=sales_db
      - MONGODB_COLLECTION=sales
      - CORE_SERVICE_URL=http://core-service:8000
      - AUTH_SERVICE_URL=http://auth-service:8002
      - REDIS_URL=redis://redis:6379
    depends_on:
      - sales-mongodb
      - core-service
      - auth-service
      - redis

  # MongoDB para o sales service
  sales-mongodb:
    image: mongo:latest
    ports:
      - "27020:27017"
    volumes:
      - sales-mongodb-data:/data/db

  # Serviço de Clientes
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./customer-service:/app
    ports:
      - "8003:8003"
    environment:
      - MONGODB_URL=mongodb://customer-mongodb:27017
      - MONGODB_DB_NAME=customer_db
      - MONGODB_COLLECTION=customers
      - AUTH_SERVICE_URL=http://auth-service:8002
      - REDIS_URL=redis://redis:6379
    depends_on:
      - customer-mongodb
      - auth-service
      - redis

  # MongoDB para o serviço de clientes
  customer-mongodb:
    image: mongo:latest
    ports:
      - "27022:27017"
    volumes:
      - customer-mongodb-data:/data/db

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_CORE_SERVICE_URL=http://localhost:8000
      - REACT_APP_SALES_SERVICE_URL=http://localhost:8001
      - REACT_APP_AUTH_SERVICE_URL=http://localhost:8002
      - REACT_APP_CUSTOMER_SERVICE_URL=http://localhost:8003
      - REACT_APP_APP_NAME=Sistema de Vendas de Veículos
      - REACT_APP_ENABLE_AUTH=true
      - REACT_APP_RETRY_ATTEMPTS=3
      - REACT_APP_RETRY_DELAY=1000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - auth-service
      - core-service
      - sales-service
      - customer-service
    stdin_open: true
    tty: true

volumes:
  redis-data:
  keycloak-data:
  auth-mongodb-data:
  customer-mongodb-data:
  core-mongodb-data:
  sales-mongodb-data:
