#!/bin/bash
set -e

echo "üöÄ Iniciando FIAP Unified Backend Service..."

# Configurar vari√°veis de ambiente padr√£o
export PORT=${PORT:-8000}
export ENVIRONMENT=${ENVIRONMENT:-production}

# Aguardar depend√™ncias externas (MongoDB, Redis)
echo "‚è≥ Aguardando depend√™ncias externas..."

# Fun√ß√£o para aguardar servi√ßo
wait_for_service() {
    local service_name=$1
    local service_url=$2
    local max_attempts=30
    local attempt=1
    
    echo "üîç Aguardando $service_name..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s --max-time 5 "$service_url" > /dev/null 2>&1; then
            echo "‚úÖ $service_name est√° dispon√≠vel"
            return 0
        fi
        
        echo "‚è≥ Tentativa $attempt/$max_attempts - $service_name n√£o est√° pronto"
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå Timeout aguardando $service_name"
    return 1
}

# Aguardar MongoDB se configurado
if [ -n "$MONGODB_URL" ]; then
    echo "üîç Verificando MongoDB..."
    # N√£o aguardar MongoDB pois pode n√£o estar dispon√≠vel em desenvolvimento
    # wait_for_service "MongoDB" "$MONGODB_URL"
fi

# Aguardar Redis se configurado
if [ -n "$REDIS_URL" ]; then
    echo "üîç Verificando Redis..."
    # N√£o aguardar Redis pois pode n√£o estar dispon√≠vel em desenvolvimento
    # wait_for_service "Redis" "$REDIS_URL"
fi

# Configurar Nginx
echo "üîß Configurando Nginx..."
nginx -t || {
    echo "‚ùå Erro na configura√ß√£o do Nginx"
    exit 1
}

# Mostrar informa√ß√µes do servi√ßo
echo "üìã Configura√ß√£o do servi√ßo:"
echo "   - Porta: $PORT"
echo "   - Ambiente: $ENVIRONMENT"
echo "   - MongoDB: ${MONGODB_URL:-'N√£o configurado'}"
echo "   - Redis: ${REDIS_URL:-'N√£o configurado'}"
echo "   - Frontend: Servido pela Vercel"

# Iniciar Supervisor
echo "üéØ Iniciando todos os microservi√ßos backend..."
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf 