#!/bin/bash

# Script r√°pido para testar a solu√ß√£o do problema

echo "üîß Teste R√°pido da Solu√ß√£o"
echo "=" * 40

echo ""
echo "1. Verificando Docker..."
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando!"
    exit 1
else
    echo "‚úÖ Docker est√° rodando"
fi

echo ""
echo "2. Parando containers (se estiverem rodando)..."
docker-compose down > /dev/null 2>&1

echo ""
echo "3. Verificando se containers est√£o parados..."
containers=$(docker-compose ps -q)
if [ -z "$containers" ]; then
    echo "‚úÖ Containers est√£o parados (cen√°rio correto)"
else
    echo "‚ùå Alguns containers ainda est√£o rodando"
fi

echo ""
echo "4. Testando detec√ß√£o de containers no script..."
if [ -z "$(docker-compose ps -q)" ]; then
    echo "‚úÖ Script detectaria containers parados corretamente"
else
    echo "‚ùå Script n√£o detectaria containers parados"
fi

echo ""
echo "5. Iniciando containers para teste..."
docker-compose up -d > /dev/null 2>&1

echo ""
echo "6. Aguardando containers iniciarem..."
sleep 10

echo ""
echo "7. Verificando se containers est√£o rodando..."
if docker-compose ps | grep -q "Up"; then
    echo "‚úÖ Containers est√£o rodando agora"
else
    echo "‚ùå Containers n√£o iniciaram"
fi

echo ""
echo "8. Testando verifica√ß√£o do auth-service..."
if docker-compose ps auth-service | grep -q "Up"; then
    echo "‚úÖ Auth-service est√° rodando"
else
    echo "‚ùå Auth-service n√£o est√° rodando"
fi

echo ""
echo "=" * 40
echo "‚úÖ TESTE R√ÅPIDO CONCLU√çDO!"
echo "=" * 40

echo ""
echo "üîß Agora voc√™ pode executar:"
echo "   make setup-complete"
echo ""
echo "O script agora deve:"
echo "   - Detectar containers parados"
echo "   - Iniciar containers automaticamente"
echo "   - Aguardar servi√ßos ficarem dispon√≠veis"
echo "   - Continuar com configura√ß√£o" 