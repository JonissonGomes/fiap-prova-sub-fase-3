events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configurações de logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Configurações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configurações de compressão
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss;

    # Upstream para os microserviços
    upstream auth_service {
        server 127.0.0.1:8002;
    }

    upstream core_service {
        server 127.0.0.1:8000;
    }

    upstream sales_service {
        server 127.0.0.1:8001;
    }

    upstream customer_service {
        server 127.0.0.1:8003;
    }

    server {
        listen 8000;
        server_name _;

        # Configurações de CORS para Vercel
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Health check unificado
        location /health {
            return 200 '{"status":"healthy","service":"unified-backend","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Auth Service routes
        location /auth {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Core Service routes (vehicles)
        location /vehicles {
            proxy_pass http://core_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Sales Service routes
        location /sales {
            proxy_pass http://sales_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Customer Service routes
        location /customers {
            proxy_pass http://customer_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API docs routes (apontar para core service)
        location /docs {
            proxy_pass http://core_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /openapi.json {
            proxy_pass http://core_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rota padrão para API
        location / {
            return 200 '{"message":"FIAP Unified Backend API","version":"1.0.0","services":["auth","core","sales","customer"],"docs":"/docs"}';
            add_header Content-Type application/json;
        }

        # Configurações de erro
        error_page 404 /404.json;
        location = /404.json {
            return 404 '{"error":"Not Found","message":"API endpoint not found"}';
            add_header Content-Type application/json;
        }

        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
            return 500 '{"error":"Internal Server Error","message":"Backend service unavailable"}';
            add_header Content-Type application/json;
        }
    }
} 