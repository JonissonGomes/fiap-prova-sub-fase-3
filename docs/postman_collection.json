{
  "info": {
    "name": "Vehicle Sales System API",
    "description": "Collection completa das APIs do sistema de vendas de ve√≠culos",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost",
      "type": "string"
    },
    {
      "key": "auth_url",
      "value": "{{base_url}}:8002",
      "type": "string"
    },
    {
      "key": "core_url",
      "value": "{{base_url}}:8000",
      "type": "string"
    },
    {
      "key": "sales_url",
      "value": "{{base_url}}:8001",
      "type": "string"
    },
    {
      "key": "customer_url",
      "value": "{{base_url}}:8003",
      "type": "string"
    },
    {
      "key": "frontend_url",
      "value": "{{base_url}}:3000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_email",
      "value": "admin@vehiclesales.com",
      "type": "string"
    },
    {
      "key": "admin_password",
      "value": "admin123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/health",
              "host": ["{{auth_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh_token);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response.access_token).to.be.a('string');",
                  "        pm.expect(response.user.role).to.eql('ADMIN');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{auth_url}}/auth/login",
              "host": ["{{auth_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Cliente Teste\",\n  \"role\": \"CUSTOMER\"\n}"
            },
            "url": {
              "raw": "{{auth_url}}/auth/register",
              "host": ["{{auth_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{auth_url}}/auth/profile",
              "host": ["{{auth_url}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Validate Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{access_token}}\"\n}"
            },
            "url": {
              "raw": "{{auth_url}}/auth/validate",
              "host": ["{{auth_url}}"],
              "path": ["auth", "validate"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\"{{refresh_token}}\""
            },
            "url": {
              "raw": "{{auth_url}}/auth/refresh",
              "host": ["{{auth_url}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "List Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{auth_url}}/auth/users?limit=10",
              "host": ["{{auth_url}}"],
              "path": ["auth", "users"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Core Service (Vehicles)",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{core_url}}/health",
              "host": ["{{core_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "List Vehicles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{core_url}}/vehicles?limit=10",
              "host": ["{{core_url}}"],
              "path": ["vehicles"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "List Vehicles Ordered by Price (ASC)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{core_url}}/vehicles?sort=price&order=asc&limit=10",
              "host": ["{{core_url}}"],
              "path": ["vehicles"],
              "query": [
                {
                  "key": "sort",
                  "value": "price"
                },
                {
                  "key": "order",
                  "value": "asc"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "List Vehicles Ordered by Price (DESC)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{core_url}}/vehicles?sort=price&order=desc&limit=10",
              "host": ["{{core_url}}"],
              "path": ["vehicles"],
              "query": [
                {
                  "key": "sort",
                  "value": "price"
                },
                {
                  "key": "order",
                  "value": "desc"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "List Available Vehicles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{core_url}}/vehicles?status=available&sort=price&order=asc",
              "host": ["{{core_url}}"],
              "path": ["vehicles"],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "sort",
                  "value": "price"
                },
                {
                  "key": "order",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "List Sold Vehicles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{core_url}}/vehicles?status=sold&sort=price&order=desc",
              "host": ["{{core_url}}"],
              "path": ["vehicles"],
              "query": [
                {
                  "key": "status",
                  "value": "sold"
                },
                {
                  "key": "sort",
                  "value": "price"
                },
                {
                  "key": "order",
                  "value": "desc"
                }
              ]
            }
          }
        },
        {
          "name": "Create Vehicle",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('vehicle_id', response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"brand\": \"Toyota\",\n  \"model\": \"Corolla\",\n  \"year\": 2023,\n  \"price\": 85000.00,\n  \"color\": \"Branco\",\n  \"fuel_type\": \"Flex\",\n  \"transmission\": \"Autom√°tico\",\n  \"mileage\": 0,\n  \"description\": \"Ve√≠culo zero quil√¥metro\"\n}"
            },
            "url": {
              "raw": "{{core_url}}/vehicles",
              "host": ["{{core_url}}"],
              "path": ["vehicles"]
            }
          }
        },
        {
          "name": "Get Vehicle by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{core_url}}/vehicles/{{vehicle_id}}",
              "host": ["{{core_url}}"],
              "path": ["vehicles", "{{vehicle_id}}"]
            }
          }
        },
        {
          "name": "Update Vehicle",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"price\": 82000.00,\n  \"description\": \"Pre√ßo atualizado\"\n}"
            },
            "url": {
              "raw": "{{core_url}}/vehicles/{{vehicle_id}}",
              "host": ["{{core_url}}"],
              "path": ["vehicles", "{{vehicle_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Customer Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{customer_url}}/health",
              "host": ["{{customer_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Create Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('customer_id', response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jo√£o Silva\",\n  \"email\": \"joao@example.com\",\n  \"phone\": \"11987654321\",\n  \"cpf\": \"12345678901\",\n  \"address\": \"Rua das Flores, 123\",\n  \"city\": \"S√£o Paulo\",\n  \"state\": \"SP\",\n  \"zip_code\": \"01234567\"\n}"
            },
            "url": {
              "raw": "{{customer_url}}/customers",
              "host": ["{{customer_url}}"],
              "path": ["customers"]
            }
          }
        },
        {
          "name": "List Customers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_url}}/customers?limit=10",
              "host": ["{{customer_url}}"],
              "path": ["customers"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Customer by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_url}}/customers/{{customer_id}}",
              "host": ["{{customer_url}}"],
              "path": ["customers", "{{customer_id}}"]
            }
          }
        },
        {
          "name": "Search Customer by CPF",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_url}}/customers/search?cpf=12345678901",
              "host": ["{{customer_url}}"],
              "path": ["customers", "search"],
              "query": [
                {
                  "key": "cpf",
                  "value": "12345678901"
                }
              ]
            }
          }
        },
        {
          "name": "Search Customer by Email",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_url}}/customers/search?email=joao@example.com",
              "host": ["{{customer_url}}"],
              "path": ["customers", "search"],
              "query": [
                {
                  "key": "email",
                  "value": "joao@example.com"
                }
              ]
            }
          }
        },
        {
          "name": "Update Customer",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"11999888777\",\n  \"address\": \"Rua Nova, 456\"\n}"
            },
            "url": {
              "raw": "{{customer_url}}/customers/{{customer_id}}",
              "host": ["{{customer_url}}"],
              "path": ["customers", "{{customer_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Sales Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{sales_url}}/health",
              "host": ["{{sales_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Process Purchase",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('sale_id', response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customer_id\": \"{{customer_id}}\",\n  \"vehicle_id\": \"{{vehicle_id}}\",\n  \"payment_method\": \"financing\",\n  \"notes\": \"Cliente aprovado para financiamento\"\n}"
            },
            "url": {
              "raw": "{{sales_url}}/sales/purchase",
              "host": ["{{sales_url}}"],
              "path": ["sales", "purchase"]
            }
          }
        },
        {
          "name": "List Sales",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{sales_url}}/sales?limit=10",
              "host": ["{{sales_url}}"],
              "path": ["sales"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Sale by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{sales_url}}/sales/{{sale_id}}",
              "host": ["{{sales_url}}"],
              "path": ["sales", "{{sale_id}}"]
            }
          }
        },
        {
          "name": "Update Sale Status to Completed",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\",\n  \"notes\": \"Pagamento confirmado\"\n}"
            },
            "url": {
              "raw": "{{sales_url}}/sales/{{sale_id}}/status",
              "host": ["{{sales_url}}"],
              "path": ["sales", "{{sale_id}}", "status"]
            }
          }
        },
        {
          "name": "List Completed Sales",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{sales_url}}/sales?status=completed",
              "host": ["{{sales_url}}"],
              "path": ["sales"],
              "query": [
                {
                  "key": "status",
                  "value": "completed"
                }
              ]
            }
          }
        },
        {
          "name": "List Pending Sales",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{sales_url}}/sales?status=pending",
              "host": ["{{sales_url}}"],
              "path": ["sales"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Integration Tests",
      "item": [
        {
          "name": "Complete Flow Test",
          "item": [
            {
              "name": "1. Login Admin",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Admin login successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.be.a('string');",
                      "    pm.expect(response.user.role).to.eql('ADMIN');",
                      "    pm.collectionVariables.set('access_token', response.access_token);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
                },
                "url": {
                  "raw": "{{auth_url}}/auth/login",
                  "host": ["{{auth_url}}"],
                  "path": ["auth", "login"]
                }
              }
            },
            {
              "name": "2. Create Vehicle",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Vehicle created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.id).to.be.a('string');",
                      "    pm.expect(response.status).to.eql('available');",
                      "    pm.collectionVariables.set('test_vehicle_id', response.id);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"brand\": \"Honda\",\n  \"model\": \"Civic\",\n  \"year\": 2023,\n  \"price\": 95000.00,\n  \"color\": \"Preto\",\n  \"fuel_type\": \"Flex\",\n  \"transmission\": \"Manual\",\n  \"mileage\": 0,\n  \"description\": \"Ve√≠culo para teste de integra√ß√£o\"\n}"
                },
                "url": {
                  "raw": "{{core_url}}/vehicles",
                  "host": ["{{core_url}}"],
                  "path": ["vehicles"]
                }
              }
            },
            {
              "name": "3. Create Customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.id).to.be.a('string');",
                      "    pm.expect(response.active).to.be.true;",
                      "    pm.collectionVariables.set('test_customer_id', response.id);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Cliente Teste Integra√ß√£o\",\n  \"email\": \"teste@integracao.com\",\n  \"phone\": \"11999888777\",\n  \"cpf\": \"98765432100\",\n  \"address\": \"Rua Teste, 123\",\n  \"city\": \"S√£o Paulo\",\n  \"state\": \"SP\",\n  \"zip_code\": \"01234567\"\n}"
                },
                "url": {
                  "raw": "{{customer_url}}/customers",
                  "host": ["{{customer_url}}"],
                  "path": ["customers"]
                }
              }
            },
            {
              "name": "4. Process Purchase",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Purchase processed successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.id).to.be.a('string');",
                      "    pm.expect(response.status).to.eql('pending');",
                      "    pm.collectionVariables.set('test_sale_id', response.id);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customer_id\": \"{{test_customer_id}}\",\n  \"vehicle_id\": \"{{test_vehicle_id}}\",\n  \"payment_method\": \"cash\",\n  \"notes\": \"Teste de integra√ß√£o - pagamento √† vista\"\n}"
                },
                "url": {
                  "raw": "{{sales_url}}/sales/purchase",
                  "host": ["{{sales_url}}"],
                  "path": ["sales", "purchase"]
                }
              }
            },
            {
              "name": "5. Complete Sale",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Sale completed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.status).to.eql('completed');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"completed\",\n  \"notes\": \"Pagamento confirmado - teste de integra√ß√£o\"\n}"
                },
                "url": {
                  "raw": "{{sales_url}}/sales/{{test_sale_id}}/status",
                  "host": ["{{sales_url}}"],
                  "path": ["sales", "{{test_sale_id}}", "status"]
                }
              }
            },
            {
              "name": "6. Verify Vehicle Status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Vehicle status updated to sold', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.status).to.eql('sold');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{core_url}}/vehicles/{{test_vehicle_id}}",
                  "host": ["{{core_url}}"],
                  "path": ["vehicles", "{{test_vehicle_id}}"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Frontend Tests",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{frontend_url}}/health",
              "host": ["{{frontend_url}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Frontend Health Check\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Frontend App",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{frontend_url}}/",
              "host": ["{{frontend_url}}"],
              "path": [""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Frontend App Loads\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "    pm.expect(pm.response.text()).to.include(\"Sistema de Vendas\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Static Assets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{frontend_url}}/static/js/bundle.js",
              "host": ["{{frontend_url}}"],
              "path": ["static", "js", "bundle.js"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Static Assets Load\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"javascript\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
} 